name: testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-testing.txt

    - name: Lint with pycodestyle
      run: |
        pip install pycodestyle
        pycodestyle src/mrnet

    - name: Lint with mypy
      run: |
        pip install mypy
        mypy src/mrnet

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 --count --show-source --max-complexity=2000 --statistics src/mrnet
        # exit-zero treats all errors as warnings.
        flake8 --count --exit-zero --max-complexity=20 --statistics src/mrnet

    - name: Check with Python Black
      uses: psf/black@stable

  test:
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install OpenBabel
      shell: bash -l {0}
      run: conda install -c conda-forge openbabel

    - name: Install pygraphviz
      shell: bash -l {0}
      run: conda install -c conda-forge pygraphviz

    - name: Install rnmc-native
      shell: bash -l {0}
      run: conda install -c conda-forge rnmc-native

    - name: Install Python dependencies
      shell: bash -l {0}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-testing.txt

    - name: Test with pytest
      shell: bash -l {0}
      run: |
        pip install -e .
        pytest --cov=mrnet --cov-report=xml

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt
        pip install -e .

    - name: Build
      run: mkdocs build

  merge-deps:
    needs:
      - lint
      - test
      - docs
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@master
        with:
          GITHUB_LOGIN: dependabot[bot]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
